<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
	<!-- 启动扫描所有的controller -->
	<!-- <context:component-scan base-package="com.controller" /> -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true" /> -->

	<!-- 主要作用于@Controller，激活该模式 下面是一种简写形式，完全可以手动配置替代这种简写形式； 它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 
		两个bean, 是spring MVC为@Controllers分发请求所必须的 -->
	<mvc:annotation-driven />

	<!-- 启用spring mvc 注解 -->
	<context:annotation-config />
	<mvc:default-servlet-handler /> <!--使Spring支持自动检测组件，如注解的Controller -->
	<context:component-scan base-package="com.controller" />
	<context:component-scan base-package="com.service" />
	<context:component-scan base-package="com.dao" />
	<context:component-scan base-package="com.common" />
	<!-- 启动 Spring MVC 的注解功能，完成请求和注解 POJO 的映射 -->
	<bean id="handlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean id="handlerAdapter" class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />

	<!-- 配置/WEB-INF/views/目录里面的jsp文件不被DispatcherServlet处理，可以直接通过浏览器访问。 view-name 
		/WEB-INF/views/里面的jsp文件名(不许后缀即可) path 访问地址 -->
	<mvc:view-controller path="/jsp" view-name="*" />

	<!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/WEB-INF/views/目录下，查找XXX.jsp文件 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/jsp"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
</beans>